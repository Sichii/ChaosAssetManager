<UserControl x:Class="ChaosAssetManager.Controls.MapEditorControl"
             x:Name="Self"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mapEditorControls="clr-namespace:ChaosAssetManager.Controls.MapEditorControls"
             xmlns:viewModel="clr-namespace:ChaosAssetManager.ViewModel"
             mc:Ignorable="d"
             d:DesignHeight="900"
             d:DesignWidth="1400"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             PreviewKeyDown="MapEditorControl_PreviewKeyDown">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="242" />
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="99"
              VerticalAlignment="Top"
              HorizontalAlignment="Stretch"
              materialDesign:MenuAssist.TopLevelMenuItemHeight="30">
            <MenuItem x:Name="NewBtn"
                      Header="New">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Text="Width: " />
                    <TextBox Grid.Column="1"
                             x:Name="NewMapWidthTbx"
                             Width="50"
                             TabIndex="0" />
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Text="Height: " />
                    <TextBox Grid.Column="1"
                             x:Name="NewMapHeightTbx"
                             Width="50"
                             TabIndex="1" />
                </Grid>
                <Grid>
                    <Button Content="Create"
                            TabIndex="2"
                            Click="NewMapCreateBtn_OnClick" />
                </Grid>
            </MenuItem>
            <MenuItem x:Name="LoadBtn"
                      Header="Load"
                      Click="LoadBtn_OnClick" />
            <MenuItem x:Name="SaveBtn"
                      Header="Save"
                      Click="SaveBtn_OnClick"
                      ToolTip="Saves the currently selected map (CTRL + S)" />
            <MenuItem x:Name="SaveAsBtn"
                      Header="SaveAs"
                      Click="SaveAsBtn_OnClick"
                      ToolTip="Saves the currently selected map to a specified location (CTRL + SHIFT + S)" />
        </Menu>

        <ToolBarTray Grid.Row="1"
                     Grid.Column="0"
                     Grid.ColumnSpan="99"
                     Style="{StaticResource MaterialDesignToolBarTray}">
            <ToolBar Style="{StaticResource MaterialDesignToolBar}"
                     MaxHeight="45">

                <TextBlock Text="Options: "
                           VerticalAlignment="Center"
                           Margin="0, 0, 5, 0" />
                <ListBox SelectionMode="Extended"
                         materialDesign:ListBoxAssist.IsToggle="True"
                         materialDesign:ListBoxAssist.CanUserToggleSelectedItem="True">
                    <ListBoxItem x:Name="SnowTileSetBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Content="{materialDesign:PackIcon Kind=Snowflake, Size=28}"
                                 Foreground="Snow"
                                 Padding="0,5"
                                 MouseLeftButtonUp="SnowTileSetBtn_OnMouseLeftButtonUp"
                                 ToolTip="Swaps to the snow tileset" />
                </ListBox>
                <Separator />
                <TextBlock Text="Control: "
                           VerticalAlignment="Center"
                           Margin="0, 0, 5, 0" />
                <Button x:Name="UndoBtn"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{materialDesign:PackIcon Kind=Undo, Size=28}"
                        Padding="10,5"
                        ToolTip="(CTRL + Z) Undo the last action up to 20 times"
                        Click="UndoBtn_OnClick" />
                <Button x:Name="RedoBtn"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{materialDesign:PackIcon Kind=Redo, Size=28}"
                        Padding="10,5"
                        ToolTip="(CTRL + Y) Redo the last action you undid up to 20 times"
                        Click="RedoBtn_OnClick" />
                <Separator />
                <TextBlock Text="Show: "
                           VerticalAlignment="Center"
                           Margin="0, 0, 5, 0" />
                <ListBox SelectionMode="Extended"
                         materialDesign:ListBoxAssist.IsToggle="True"
                         materialDesign:ListBoxAssist.CanUserToggleSelectedItem="True">
                    <ListBoxItem x:Name="ShowTabMapBtn"
                                 Content="{materialDesign:PackIcon Kind=Tab, Size=28}"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 IsSelected="{Binding ViewModel.ShowTabMap}"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Show tab map overlay" />
                    <ListBoxItem x:Name="ShowBackgroundBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 IsSelected="{Binding ViewModel.ShowBackground}"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Show background tiles">
                        <Path Width="40"
                              Height="30"
                              Fill="Green"
                              Data="M 0,0 L 0,30 L 40,30 L 40,0 Z" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="ShowLeftForegroundBtn"
                                 HorizontalContentAlignment="Left"
                                 VerticalContentAlignment="Center"
                                 IsSelected="{Binding ViewModel.ShowLeftForeground}"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Show left foreground tiles">
                        <Path Width="30"
                              Height="30"
                              Fill="Green"
                              Data="M 5,0 L 5,30 L 25,40 L 25,0 Z" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="ShowRightForegroundBtn"
                                 HorizontalContentAlignment="Right"
                                 VerticalContentAlignment="Center"
                                 IsSelected="{Binding ViewModel.ShowRightForeground}"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Show right foreground tiles">
                        <Path Width="30"
                              Height="30"
                              Fill="Green"
                              Data="M 5,0 L 5,30 L 25,30 L 25,0 Z" />
                    </ListBoxItem>
                </ListBox>
                <Separator />
                <TextBlock Text="Edit: "
                           VerticalAlignment="Center"
                           Margin="0, 0, 5, 0" />
                <ListBox SelectedIndex="0"
                         x:Name="EditLayersLbx"
                         materialDesign:ListBoxAssist.IsToggle="False"
                         materialDesign:ListBoxAssist.CanUserToggleSelectedItem="False"
                         SelectionChanged="EditTileType_OnSelectionChanged">
                    <ListBoxItem x:Name="EditBackgroundBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Edit background tiles (CTRL + DOWN)">
                        <Path Width="40"
                              Height="30"
                              Fill="Green"
                              Data="M 0,0 L 0,30 L 40,30 L 40,0 Z" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="EditLeftForegroundBtn"
                                 HorizontalContentAlignment="Left"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Edit left foreground tiles (CTRL + LEFT)">
                        <Path Width="30"
                              Height="30"
                              Fill="Green"
                              Data="M 5,0 L 5,30 L 25,40 L 25,0 Z" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="EditRightForegroundBtn"
                                 HorizontalContentAlignment="Right"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Edit right foreground tiles (CTRL + RIGHT)">
                        <Path Width="30"
                              Height="30"
                              Fill="Green"
                              Data="M 5,0 L 5,30 L 25,30 L 25,0 Z" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="EditForegroundBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Edit foreground tiles (CTRL + UP)">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Path Grid.Column="0"
                                  Width="20"
                                  Height="30"
                                  Fill="Green"
                                  Data="M 0,0 L 0,30 L 15,30 L 15,0 Z" />
                            <Path Grid.Column="1"
                                  Width="20"
                                  Height="30"
                                  Fill="Green"
                                  Data="M 5,0 L 5,30 L 20,30 L 20,0 Z" />
                        </Grid>
                    </ListBoxItem>
                    <ListBoxItem x:Name="EditAllBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Edit all tile layers (CTRL + A)">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="0"
                                  Grid.ColumnSpan="99"
                                  Width="40"
                                  Height="40"
                                  Fill="LawnGreen"
                                  Data="M 0,0 L 0,30 L 40,30 L 40,0 Z" />
                            <Path Grid.Column="0"
                                  Width="20"
                                  Height="40"
                                  Fill="Green"
                                  Data="M 2,2 L 2,28 L 15,28 L 15,2 Z" />
                            <Path Grid.Column="1"
                                  Width="20"
                                  Height="40"
                                  Fill="Green"
                                  Data="M 5,2 L 5,28 L 18,28 L 18,2 Z" />
                        </Grid>
                    </ListBoxItem>
                </ListBox>
                <Separator />
                <TextBlock Text="Tools: "
                           VerticalAlignment="Center"
                           Margin="0, 0, 5, 0" />
                <ListBox SelectedIndex="0"
                         x:Name="EditToolsLbx"
                         materialDesign:ListBoxAssist.IsToggle="True"
                         materialDesign:ListBoxAssist.CanUserToggleSelectedItem="True"
                         SelectionChanged="EditingToolType_OnSelectionChanged">
                    <ListBoxItem x:Name="DrawToolBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Draw tool (paste whatever tiles(s) are selected) (CTRL + D)">
                        <materialDesign:PackIcon Kind="Pencil" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="SampleToolBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Find tool (click a tile to find it in the tile browser) (CTRL + F)">
                        <materialDesign:PackIcon Kind="Eyedropper" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="SelectToolBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Grab tool (click and drag to grab selected tiles) (CTRL + G)">
                        <materialDesign:PackIcon Kind="Select" />
                    </ListBoxItem>
                    <ListBoxItem x:Name="EraseToolBtn"
                                 HorizontalContentAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Padding="0,5"
                                 BorderThickness="1"
                                 ToolTip="Erase tool (click and drag to erase selected tiles) (CTRL + E)">
                        <materialDesign:PackIcon Kind="Eraser" />
                    </ListBoxItem>
                </ListBox>
                <Separator />
                <TextBlock Text="Size: "
                           VerticalAlignment="Center"
                           Margin="0, 0, 5, 0" />
                <ComboBox x:Name="SizeSelectorCmbx"
                          MinWidth="150"
                          ItemsSource="{Binding ViewModel.PossibleBounds}"
                          SelectedItem="{Binding ViewModel.CurrentMapViewer.Bounds, Converter={StaticResource RectangleMapBoundsConverter}}"
                          ToolTip="Possible sizes for the map" />
            </ToolBar>
        </ToolBarTray>

        <TabControl Grid.Row="2"
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    x:Name="MapViewerTabControl"
                    ItemsSource="{Binding ViewModel.Maps}"
                    Style="{StaticResource MaterialDesignTabControl}"
                    materialDesign:TabAssist.HasFilledTab="True"
                    ContentTemplate="{StaticResource MapViewerDataTemplate}"
                    HorizontalContentAlignment="Stretch"
                    ScrollViewer.HorizontalScrollBarVisibility="Auto"
                    SelectionChanged="MapViewerTabControl_OnSelectionChanged">
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Hidden"
                                      materialDesign:ScrollViewerAssist.IgnorePadding="True"
                                      materialDesign:ScrollViewerAssist.CornerRectangleVisibility="Hidden">
                            <ScrollViewer.Resources>
                                <Style TargetType="ScrollBar"
                                       BasedOn="{StaticResource MaterialDesignScrollBar}">
                                    <Setter Property="materialDesign:ScrollBarAssist.ThumbCornerRadius"
                                            Value="4" />
                                    <Setter Property="materialDesign:ScrollBarAssist.ThumbHeight"
                                            Value="8" />
                                    <Setter Property="materialDesign:ScrollBarAssist.ButtonsVisibility"
                                            Value="Hidden" />
                                </Style>
                            </ScrollViewer.Resources>
                            <TabPanel x:Name="HeaderPanel"
                                      Panel.ZIndex="1"
                                      KeyboardNavigation.TabIndex="1"
                                      Margin="2,2,2,0"
                                      IsItemsHost="true" />
                        </ScrollViewer>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="SelectedContent"
                                          Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            <TabControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </TabControl.ItemsPanel>
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem"
                       BasedOn="{StaticResource MaterialDesignTabItem}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="DimGray" />
                        </Trigger>
                    </Style.Triggers>

                    <Setter Property="Header"
                            Value="{Binding FileName}" />

                    <Setter Property="MinWidth"
                            Value="150" />

                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0"
                                               Text="{Binding}"
                                               Foreground="White"
                                               VerticalAlignment="Center" />

                                    <Button Grid.Column="1"
                                            Content="{materialDesign:PackIcon Kind=Close}"
                                            FontSize="16"
                                            FontWeight="Bold"
                                            Padding="0"
                                            Width="20"
                                            Height="20"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Margin="5, 0, 0, 0"
                                            Foreground="White"
                                            Click="MapCloseBtn_OnClick" />
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>

        <TabControl Grid.Row="2"
                    Grid.Column="1"
                    Style="{StaticResource MaterialDesignUniformTabControl}">

            <TabItem Header="Tiles"
                     Style="{StaticResource MaterialDesignTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBox Grid.Row="0"
                             materialDesign:HintAssist.Hint="Search (NOT IMPLEMENTED)"
                             TextChanged="TextBoxBase_OnTextChanged" />

                    <DataGrid Grid.Row="1"
                              x:Name="TilesControl"
                              SelectionMode="Single"
                              SelectionUnit="Cell"
                              HeadersVisibility="None"
                              AutoGenerateColumns="False"
                              IsReadOnly="True"
                              EnableRowVirtualization="True"
                              VirtualizingPanel.IsVirtualizing="True"
                              VirtualizingPanel.VirtualizationMode="Recycling"
                              SelectedCellsChanged="TilesControl_OnSelectedCellsChanged"
                              PreviewMouseWheel="DataGrid_OnPreviewMouseWheel">
                        <DataGrid.ItemsSource>
                            <MultiBinding Converter="{StaticResource TilesLayerFlagsConverter}">
                                <Binding Path="ViewModel.EditingLayerFlags" />
                                <Binding Path="ViewModel" />
                            </MultiBinding>
                        </DataGrid.ItemsSource>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow"
                                   BasedOn="{StaticResource MaterialDesignDataGridRow}">
                                <!-- Remove extra spacing from each row -->
                                <Setter Property="Height"
                                        Value="Auto" />
                                <Setter Property="Padding"
                                        Value="0" />
                                <Setter Property="Margin"
                                        Value="0" />
                                <Setter Property="HorizontalContentAlignment"
                                        Value="Left" />

                                <Style.Triggers>
                                    <!-- By default, the entire row highlights on hover.
                     This trigger sets it transparent when hovered, 
                     effectively disabling row hover. -->
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="Transparent" />
                                    </Trigger>

                                    <!-- Similarly, remove row highlight on selection 
                     (optional; otherwise the row might highlight on selection). -->
                                    <Trigger Property="IsSelected"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="Transparent" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell"
                                   BasedOn="{StaticResource MaterialDesignDataGridCell}">
                                <!-- Remove default padding and borders -->
                                <Setter Property="Padding"
                                        Value="1" />
                                <Setter Property="Margin"
                                        Value="0" />
                                <Setter Property="BorderThickness"
                                        Value="0" />
                                <Setter Property="BorderBrush"
                                        Value="DimGray" />
                                <Setter Property="HorizontalContentAlignment"
                                        Value="Left" />
                                <Setter Property="HorizontalAlignment"
                                        Value="Left" />
                                <!-- Remove focus visuals if you don't want a focus rectangle -->
                                <Setter Property="FocusVisualStyle"
                                        Value="{x:Null}" />

                                <Style.Triggers>
                                    <!-- Hover (IsMouseOver = True) on the cell itself -->
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="DimGray" />
                                    </Trigger>

                                    <!-- If you also want a cell to highlight when 'selected'
                     (rather than the whole row), do something like: -->
                                    <Trigger Property="IsSelected"
                                             Value="True">
                                        <Setter Property="Background"
                                                Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="56">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type viewModel:TileRowViewModel}">
                                        <mapEditorControls:TilePickerEntryControl DataContext="{Binding Tile1}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="56">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type viewModel:TileRowViewModel}">
                                        <mapEditorControls:TilePickerEntryControl DataContext="{Binding Tile2}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="56">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type viewModel:TileRowViewModel}">
                                        <mapEditorControls:TilePickerEntryControl DataContext="{Binding Tile3}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="56">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type viewModel:TileRowViewModel}">
                                        <mapEditorControls:TilePickerEntryControl DataContext="{Binding Tile4}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
            <TabItem Header="Structures"
                     Style="{StaticResource MaterialDesignTabItem}"
                     HorizontalContentAlignment="Stretch"
                     HorizontalAlignment="Stretch">
                <DataGrid Grid.Row="1"
                          x:Name="StructuresControl"
                          SelectionMode="Single"
                          SelectionUnit="Cell"
                          HeadersVisibility="None"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          EnableRowVirtualization="True"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          SelectedCellsChanged="StructuresControl_OnSelectedCellsChanged"
                          HorizontalContentAlignment="Stretch"
                          HorizontalAlignment="Stretch"
                          PreviewMouseWheel="DataGrid_OnPreviewMouseWheel">
                    <DataGrid.ItemsSource>
                        <MultiBinding Converter="{StaticResource StructuresLayerFlagsConverter}">
                            <Binding Path="ViewModel.EditingLayerFlags" />
                            <Binding Path="ViewModel" />
                        </MultiBinding>
                    </DataGrid.ItemsSource>
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow"
                               BasedOn="{StaticResource MaterialDesignDataGridRow}">
                            <!-- Remove extra spacing from each row -->
                            <Setter Property="Height"
                                    Value="Auto" />
                            <Setter Property="Padding"
                                    Value="0" />
                            <Setter Property="Margin"
                                    Value="0" />

                            <Style.Triggers>
                                <!-- By default, the entire row highlights on hover.
                     This trigger sets it transparent when hovered, 
                     effectively disabling row hover. -->
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                </Trigger>

                                <!-- Similarly, remove row highlight on selection 
                     (optional; otherwise the row might highlight on selection). -->
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <!-- Remove default padding and borders -->
                            <Setter Property="Padding"
                                    Value="1" />
                            <Setter Property="Margin"
                                    Value="0" />
                            <Setter Property="BorderThickness"
                                    Value="0" />
                            <Setter Property="BorderBrush"
                                    Value="DimGray" />
                            <!-- Remove focus visuals if you don't want a focus rectangle -->
                            <Setter Property="FocusVisualStyle"
                                    Value="{x:Null}" />

                            <Style.Triggers>
                                <!-- Hover (IsMouseOver = True) on the cell itself -->
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="DimGray" />
                                </Trigger>

                                <!-- If you also want a cell to highlight when 'selected'
                     (rather than the whole row), do something like: -->
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="DimGray" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Width="224">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="{x:Type viewModel:StructureViewModel}">
                                    <mapEditorControls:StructurePickerEntry />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>

        <materialDesign:ColorZone Grid.Row="3"
                                  Grid.Column="0"
                                  Grid.ColumnSpan="99"
                                  materialDesign:ColorZoneAssist.Mode="SecondaryDark">
            <Grid>
                <TextBlock Text="{Binding ViewModel.MouseHoverTileCoordinates, StringFormat='Tile Coords: {0}'}"
                           HorizontalAlignment="Left"
                           Margin="20, 0" />

                <TextBlock Text="{Binding ViewModel.SelectedTileIndex, StringFormat='Tile Id: {0}'}"
                           HorizontalAlignment="Right"
                           Margin="20, 0"
                           ToolTip="This is the actual tile id. When background tiles are saved to a map file, they are +1'd" />
            </Grid>
        </materialDesign:ColorZone>

        <materialDesign:Snackbar Name="Snackbar"
                                 Grid.ColumnSpan="99"
                                 Grid.RowSpan="99"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="0"
                                 MessageQueue="{materialDesign:MessageQueue}" />
    </Grid>
</UserControl>